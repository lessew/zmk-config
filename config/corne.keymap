/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
    combos {
        compatible = "zmk,combos";
        combo_esc {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };
        combo_left {
            timeout-ms = <50>;
            key-positions = <6 18>;
            bindings = <&kp LEFT>;
        };
        combo_down {
            timeout-ms = <50>;
            key-positions = <7 19>;
            bindings = <&kp DOWN>;
        };
        combo_up {
            timeout-ms = <50>;
            key-positions = <8 20>;
            bindings = <&kp LEFT>;
        };
        combo_right {
            timeout-ms = <50>;
            key-positions = <9 21>;
            bindings = <&kp RIGHT>;
        };
    };
};

/ {
    macros {
        zed_em_kay: zed_em_kay {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LSHFT>
                , <&macro_tap &kp Z &kp M &kp K>
                , <&macro_release &kp LSHFT>
                ;
        };
    };
};

&mt {
    tapping-term-ms = <200>;
    flavor = "balanced";
};

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  EST |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
// | SHIFT |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
// | TAB |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
//                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |
                        bindings = <
   &kp LEFT_BRACKET    &kp Q &kp W       &kp E      &kp R      &kp T   &kp Y &kp U      &kp I          &kp O         &kp P    &kp BSLH
   &kp RIGHT_BRACKET &kp A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &kp SEMI &kp SQT
   &kp TAB     &kp Z &kp X       &kp C      &kp V      &kp B  &kp N &kp M      &kp COMMA      &kp DOT       &kp FSLH &kp GRAVE
                  &mt LCTRL ESC &mt LALT BSPC &lt 1 SPACE   &lt 2 RET &mt RGUI DEL &kp LSHIFT
>;
                };
                lower_layer {
// -----------------------------------------------------------------------------------------
// |  PLUS |  *  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
// | MIN| / | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
// |    |     |     |     |     |     |   |     |     |     |     |     |      |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
 &kp PLUS    &kp ASTRK &kp N7 &kp N8 &kp N9 &kp LPAR  &kp CARET   &kp AMPERSAND  &kp ASTERISK &kp LEFT_BRACE    &kp RIGHT_BRACE  &kp PLUS
   &kp MINUS   &kp FSLH  &kp N4 &kp N5 &kp N6 &kp RPAR  &kp EXCLAMATION  &kp AT &kp HASH &kp DOLLAR &kp PERCENT   &kp MINUS
   &kp ESC      &kp N0    &kp N1 &kp N2 &kp N3 &kp EQUAL &kp LEFT_BRACE    &kp RIGHT_BRACE  &kp LESS_THAN     &kp GREATER_THAN   &kp DOUBLE_QUOTES &trans
                                    &trans     &trans       &trans      &trans  &trans   &trans
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
// | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
// | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp C_BRIGHTNESS_INC  &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4   &kp CARET &kp PAGE_UP  &kp PAGE_DOWN &none &none &kp K_VOL_UP
   &kp C_BRIGHTNESS_DEC  &bt BT_CLR       &none       &none       &none       &none         &kp LEFT  &kp DOWN &kp UP  &kp RIGHT &none &kp K_VOL_DN
   &none &none   &none &none   &none   &none      &kp LG(LEFT) &kp LG(DOWN)  &kp LG(UP)  &kp LG(RIGHT) &trans &kp K_MUTE
                             &kp LSHIFT &kp LGUI   &kp SPACE   &kp RET   &trans   &zed_em_kay
                        >;
                };
        };
};
